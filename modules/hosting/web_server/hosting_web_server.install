<?php
/**
 * @file
 * Install, update and uninstall functions for the hosting_web_server module.
 *
 */

// $Id$



/**
 * Add package description to hosting_package table
 */
function hosting_web_server_update_1() {
  $ret = array();
  // TODO update_sql has been removed. Use the database API for any schema or data changes.
  $ret[] = array() /* update_sql("ALTER TABLE {hosting_web_server} ADD COLUMN drush_path longtext NOT NULL default ''") */;
  // hook_update_N() no longer returns a $ret array. Instead, return
  // nothing or a translated string indicating the update ran successfully.
  // See http://drupal.org/node/224333#update_sql.
  return t('TODO Add a descriptive string here to show in the UI.') /* $ret */;
}

/**
 * @todo Please document this function.
 * @see http://drupal.org/node/1354
 */
function hosting_web_server_update_2() {
  $ret = array();
  // TODO update_sql has been removed. Use the database API for any schema or data changes.
  $ret[] = array() /* update_sql("ALTER TABLE {hosting_web_server} ADD COLUMN ports longtext NOT NULL default ''") */;
  // TODO Please review the conversion of this statement to the D7 database API syntax.
  /* db_query("UPDATE {hosting_web_server} SET ports = '80'") */
  db_update('hosting_web_server')
  ->fields(array(
    'ports' =>  '80',
  ))
  ->execute();
  // hook_update_N() no longer returns a $ret array. Instead, return
  // nothing or a translated string indicating the update ran successfully.
  // See http://drupal.org/node/224333#update_sql.
  return t('TODO Add a descriptive string here to show in the UI.') /* $ret */;
}

/**
 * Move a lot of fields to the hosting_server table.
 */
function hosting_web_server_update_6000() {
  $ret = array();

  // THIS IS A MYSQL-ism, but we need it at this point.
  // TODO Please convert this statement to the D7 database API syntax.
  /* db_query("INSERT INTO {hosting_service} (nid, vid, service, type, restart_cmd, port, available) SELECT nid, vid, 'http', 'apache', restart_cmd, 80, 1 FROM {hosting_web_server}") */
  NULL;
  // TODO Please convert this statement to the D7 database API syntax.
  /* db_query("INSERT INTO {hosting_server} (nid, vid) SELECT nid, vid FROM {hosting_web_server}") */
  NULL;

  // TODO Please review the conversion of this statement to the D7 database API syntax.
  /* db_query("UPDATE {node} SET type='server' WHERE type='web_server'") */
  db_update('node')
  ->fields(array(
    'type' => 'server',
  ))
  ->condition('type', 'web_server')
  ->execute();

  db_drop_field("hosting_web_server", "ip_address");
  db_drop_field("hosting_web_server", "script_user");
  db_drop_field("hosting_web_server", "backup_path");
  db_drop_field("hosting_web_server", "config_path");
  db_drop_field("hosting_web_server", "drush_path");

  // hook_update_N() no longer returns a $ret array. Instead, return
  // nothing or a translated string indicating the update ran successfully.
  // See http://drupal.org/node/224333#update_sql.
  return t('TODO Add a descriptive string here to show in the UI.') /* $ret */;
}


/**
 * Remove the web_group field which now needs to be consistent between servers.
 */
function hosting_web_server_update_6001() {
  $ret = array();

  db_drop_field("hosting_web_server", "web_group");
  // hook_update_N() no longer returns a $ret array. Instead, return
  // nothing or a translated string indicating the update ran successfully.
  // See http://drupal.org/node/224333#update_sql.
  return t('TODO Add a descriptive string here to show in the UI.') /* $ret */;
}

/**
 * Drop the web_server table as it is no longer needed..
 * Move the restart command value into it's new home in the service table.
 */
function hosting_web_server_update_6002() {
  $ret = array();
  $result = db_query("SELECT * FROM {hosting_web_server}");
  while ($obj = db_fetch_object($result)) {
    // TODO Please review the conversion of this statement to the D7 database API syntax.
    /* db_query("UPDATE {hosting_service} SET restart_cmd = '%s', port = 80 WHERE nid=%d AND service='http' AND type = 'apache'", $obj->restart_cmd, $obj->nid) */
    db_update('hosting_service')
  ->fields(array(
    'restart_cmd' => $obj->restart_cmd,
    'port' =>  80,
  ))
  ->condition('nid', $obj->nid)
  ->condition('service', 'http')
  ->condition('type', 'apache')
  ->execute();
  }
  db_drop_table('hosting_web_server');
  // hook_update_N() no longer returns a $ret array. Instead, return
  // nothing or a translated string indicating the update ran successfully.
  // See http://drupal.org/node/224333#update_sql.
  return t('TODO Add a descriptive string here to show in the UI.') /* $ret */;
}

